
#############################################################
# Built against EPD Free Distribution, graph requires Pylab #
# Configure the options below to your liking. Case matters. #
# Grape juice fund: 1Fk3d8M21uKTGeA4ADHDXD48jVhMoi5YdK      #
#############################################################

[API]
# Enter your key and secret from BTC-e. Be sure to include info rights. At most, info and trade.
key = yourkeygoeshere
secret = supersecretsecretgoeshere

[Pairs]
# Set True any pairs you wish to display tickers for.
btc_usd = True
btc_rur = False
btc_eur = False
ltc_btc = False
ltc_usd = False
ltc_rur = False
nmc_btc = False
usd_rur = False
eur_usd = False

[Settings]
# Display (any configured pairs) tickers each run?
showTicker = True
# Display balances and any open trades each run?
verbose = False
# Main loop sleep time, in seconds
sleeptime = 60
# Save graph image each run? Requires Pylab.
saveGraph = True
# Graph DPI - Affects image size, greater DPI = more zoom-ability
graphDPI = 400

[Signals]
# Type of moving average to calculate
# SMA = simple
# VMA = volume-weighted
# Valid value range 1 - 150
MAtype = VMA
# single: single moving average, signal when crossing price
# dual: 2 moving average crossover, signal when crossing one another
# ribbon: 3 MA, each spaced n above the previous, signal when all cross price
signalType = dual
# Values for types not specified are ignored, set preferred values for your type.
# Single:
single = 42
# Dual:
fast = 34
slow = 144
# Ribbon:
# Note: ribbonStart + (3*ribbonSpacing) MUST BE < 150!
# This is because the platform only looks at last 150 trades (max returned by API)
ribbonStart = 25
ribbonSpacing = 25
# Plot price band? <-- Not implemented!
### Dev note: plot band lines 2 standard deviations above and below 20 SMA
priceBand = True

[Trading]
# True = No trades will occur
simMode = False
# Enter single pair to trade and generate signals, eg: btc_usd 
pair = btc_usd
### longon variable should be removed.
# Long on first or second currency of pair, eg: first in ltc_btc = ltc
longOn = first
# fokLast = Fill or kill, placed at last traded price
# fokTop = Fill or kill, placed at top of bid/ask queue
# market = Immediate, calculating price to fill immediately
orderType = fokTop
# Fill-or-kill timeout, FoK orders will stay live at least this long (seconds, killed after next run)
fokTimeout = 900
# Per-trade fee, percent as decimal
### Not yet used
fee = 0.002

# Double check all settings, then run Application.py to start trading!
# Exception logging is incomplete, run with IDLE to view errors
